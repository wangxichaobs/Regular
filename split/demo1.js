/*
结构 说明
字面量 匹配一个具体字符，包括不用转义的和需要转义的。比如 a 匹配字符 "a"，
又比如 \n 匹配换行符，又比如 \. 匹配小数点。
字符组
匹配一个字符，可以是多种可能之一，比如 [0-9]，表示匹配一个数字。
也有 \d 的简写形式。
另外还有反义字符组，表示可以是除了特定字符之外任何一个字符，比如 [^0-9]，
表示一个非数字字符，也有 \D 的简写形式。
量词 表示一个字符连续出现，比如 a{1,3} 表示 "a" 字符连续出现 3 次。
另外还有常见的简写形式，比如 a+ 表示 "a" 字符连续出现至少一次。
锚 匹配一个位置，而不是字符。比如 ^ 匹配字符串的开头，又比如 \b 匹配单词边界，
又比如 (?=\d) 表示数字前面的位置。
分组 用 也可以使用 括号表示一个 非捕整 获分 体，比如 组 (?:ab)+ (ab)+ 。，表示 "ab" 两个字符连续出现多次，
分支 多个子表达式多选一，比如 abc|bcd，表达式匹配 "abc" 或者 "bcd" 字符子串。
反向引用，比如 \2，表示引用第 2 个分组。

 操作符描述               操作符                  优先级
 转义符                       \                     1
 括号和方括号 (…)、(?:…)、(?=…)、(?!…)、[…]    2
 量词限定符 {m}、{m,n}、{m,}、?、*、+               3
 位置和序列 ^、$、\元字符、一般字符                 4
 管道符（竖杠）               |                     5



一、 匹配字符串整体问题  /^abc|bcd$/  与  /^(abc|bcd)$/
 位置字符和字符序列优先级要比竖杠高 上面两个走的分支不一样
二、 量词连缀问题
 1. 每个字符为 "a、"b"、"c"任选其一，
 2. 字符串的长度是 3 的倍数
三、元字符转义问题   ^、$、.、*、+、?、|、\、/、(、)、[、]、{、}、=、!、:、- ,

 跟字符组相关的元字符有 [、]、^、-。因此在会引起歧义的地方进行转义。
 匹配 "[abc]" 和 "{3,5}"   可以写成 /\[abc\]/，也可以写成 /\[abc]/



*/

let regex = /([abc]{3})+/g;
let string = 'abbbba  aaa  abc';
console.log(string.match(regex));